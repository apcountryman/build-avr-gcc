#!/usr/bin/env bash

# build-avr-gcc
#
# Copyright 2019 Andrew Countryman <apcountryman@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
# file except in compliance with the License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the specific language governing
# permissions and limitations under the License.

# File: build-avr-gcc
# Description: avr-gcc build script.

function abort()
{
    exit 1
}

function error()
{
    local param_message; declare -r param_message="$1"

    ( >&2 echo "$MNEMONIC: $param_message" )
}

function message()
{
    local param_content; declare -r param_content="$1"

    echo -n "$MNEMONIC: $param_content"
}

function display_help_text()
{
    echo "NAME"
    echo "    $MNEMONIC - Build avr-gcc from binutils 2.32, gcc 8.3.0, and avr-libc"
    echo "        2.0.0."
    echo "SYNOPSIS"
    echo "    $MNEMONIC --help"
    echo "    $MNEMONIC --version"
    echo "OPTIONS"
    echo "    --help"
    echo "        Display this help text."
    echo "    --version"
    echo "        Display the version of this script."
    echo "EXAMPLES"
    echo "    $MNEMONIC --help"
    echo "    $MNEMONIC --version"
}

function display_version()
{
    local version; declare -r version=$( git describe --always --dirty --broken )

    echo "$MNEMONIC, version $version"
}

function main()
{
    declare -r SCRIPT=$( readlink -f $0 )
    declare -r REPOSITORY=$( dirname $SCRIPT )/../..
    declare -r MNEMONIC=$( basename $SCRIPT )

    while [[ $# -gt 0 ]]; do
        local argument; argument="$1"
        shift

        case $argument in
            --help)
                display_help_text
                exit
                ;;
            --version)
                display_version
                exit
                ;;
            --*)
                ;&
            -*)
                error "'$argument' is not a supported option, aborting"
                abort
                ;;
            *)
                error "'$argument' is not a valid argument, aborting"
                abort
                ;;
        esac
    done
}

main "$@"
